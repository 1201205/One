//package com.hyc.zhihu.widget;////import android.app.Activity;//import android.app.ProgressDialog;//import android.content.Intent;//import android.graphics.Color;//import android.os.Bundle;//import android.text.Editable;//import android.text.TextWatcher;//import android.view.Gravity;//import android.view.MotionEvent;//import android.view.View;//import android.view.ViewGroup;//import android.widget.AbsListView;//import android.widget.AdapterView;//import android.widget.AdapterView.OnItemClickListener;//import android.widget.EditText;//import android.widget.LinearLayout;//import android.widget.ListView;//import android.widget.RelativeLayout;//import android.widget.TextView;//import android.widget.Toast;////import com.android.volley.Request;//import com.android.volley.Response;//import com.android.volley.VolleyError;////import java.io.Serializable;//import java.util.ArrayList;//import java.util.List;////import cn.diwinet.watersteward.R;//import cn.diwinet.watersteward.contant.URLConstant;//import cn.diwinet.watersteward.request.BaseRequestParam;//import cn.diwinet.watersteward.request.GsonRequest;//import cn.diwinet.watersteward.response.GetWaterPurifierResp;//import cn.diwinet.watersteward.third.BrandInfoAdapter;//import cn.diwinet.watersteward.third.MySectionIndexer;//import cn.diwinet.watersteward.third.PinYinUtil;//import cn.diwinet.watersteward.third.SiteBSTree;//import cn.diwinet.watersteward.widget.BlurLoadingDialog;////public class BrandSelectActivity extends RequestActivity {//////    private final int SUCCESS_BST = 10001;//    //保存所有的数据（保持不变）//    private ArrayList<BrandData> mAll;//    private ListView lv;////    private EditText edittext;//    private List<BrandData> citys;//    private String[] siteNames;////    /**//     * 进度框//     *///    private ProgressDialog dialog;//    /**//     * 分组的布局//     *///    private LinearLayout titleLayout;//    /**//     * 分组上显示的字母//     *///    private TextView title;//    //保存当前过滤的数据（会发生变化）//    private List<BrandData> brandDatas;//    /**//     * 联系人列表适配器//     *///    private BrandInfoAdapter adapter;////    /**//     * 用于进行字母表分组//     *///    private MySectionIndexer indexer;////    private RelativeLayout sectionToastLayout;////    private TextView sectionToastText;////    private LinearLayout alphabetLayout;//    private TextView tvBack;//////    /**//     * A-Z的集合//     *///    private List<TextView> alphabetList;////    /**//     * 定义字母表的排序规则//     *///    private String alphabet = "#ABCDEFGHIJKLMNOPQRSTUVWXYZ";//////    private int lastFirstVisibleItem = -1;////    private void setValue(List<BrandData> brand) {//        edittext.setHint(getString(R.string.searchEnginebranding));//        adapter = new BrandInfoAdapter(this, brand, R.layout.contact_item);//        adapter.setIndexer(indexer);//        if (brand.size() > 0) {//            setupContactsListView();//            setAlpabetListener();//        }//        brandDatas = (ArrayList) brand;//        mAll = new ArrayList<BrandData>();//        mAll.addAll(brand);////        /**//         * 向listview设置点击事件//         *///        lv.setOnItemClickListener(new MyOnItemClickListener());//        /**//         * 向edittext设置监听事件//         *///        edittext.addTextChangedListener(new MyTextWatcher());//    }////    @Override//    protected void onCreate(Bundle savedInstanceState) {//        super.onCreate(savedInstanceState);//        setContentView(R.layout.activity_seletcted_contacts);//        tvBack= (TextView) findViewById(R.id.tv_back);//        tvBack.setOnClickListener(new View.OnClickListener() {//            @Override//            public void onClick(View v) {//                finish();//            }//        });//        setControl();//    }////    /**//     * 请求品牌数据//     *///    private void loadWaterMachinBrand() {////        DialogUtil.showLoadingDialog(this, null, null, true);//        BlurLoadingDialog.show(getString(R.string.please_wait), false, getSupportFragmentManager(), BrandSelectActivity.class.getSimpleName());//        BaseRequestParam requestParam = new BaseRequestParam();//        GsonRequest<GetWaterPurifierResp> requester = new GsonRequest<>(Request.Method.POST, URLConstant.GET_PURIFIER_MANUFACTOR, requestParam, GetWaterPurifierResp.class, null, new Response.Listener<GetWaterPurifierResp>() {//            @Override//            public void onResponse(GetWaterPurifierResp resp) {////                DialogUtil.dismissLoadingDialog();//                if (resp.getStatus().equals("200")) {//                    if (brandDatas == null) {//                        brandDatas = new ArrayList<>();//                    }//                    brandDatas.clear();//                    brandDatas.addAll(convertToResultData(resp));//                    BlurLoadingDialog.dissMiss();//                } else {//                    BlurLoadingDialog.dissMiss();//                    Toast.makeText(BrandSelectActivity.this, resp.getMessage() == null ? getString(R.string.create_list_error) : resp.getMessage(), Toast.LENGTH_SHORT).show();//                    finish();//                }//            }//        }, new Response.ErrorListener() {//            @Override//            public void onErrorResponse(VolleyError volleyError) {////                DialogUtil.dismissLoadingDialog();//                BlurLoadingDialog.dissMiss();//                Toast.makeText(BrandSelectActivity.this, getString(R.string.create_list_error), Toast.LENGTH_SHORT).show();//                finish();//            }//        });//        addRequest(requester);//    }////    /**//     * 将数据加入到adapter//     * @param resp//     * @return//     *///    private List<BrandData> convertToResultData(GetWaterPurifierResp resp) {//        if (resp == null || resp.data == null) {//            return null;//        }//        SiteBSTree<String> tree = new SiteBSTree<String>();//        List<BrandData> list = new ArrayList<>();//        for (GetWaterPurifierResp.Data d : resp.data) {//            BrandData temp = new BrandData();//            temp.id = d.ppbh;//            temp.name = d.ppmc;//            tree.insert(PinYinUtil//                    .getFirstPinYin(temp.name),PinYinUtil.getAllFirstPinYin(temp.name), temp.name,temp.id+"");//        }//        brandDatas = tree.inOrder();//        indexer = new MySectionIndexer(brandDatas, alphabet);//        setValue(brandDatas);//        return list;//    }////    private void setControl() {//////        alphabetList = new ArrayList<TextView>();////        setAlphabetData();//        titleLayout = (LinearLayout) findViewById(R.id.title_layout1);//        title = (TextView) findViewById(R.id.title);//        sectionToastLayout = (RelativeLayout) findViewById(R.id.section_toast_layout);//        sectionToastText = (TextView) findViewById(R.id.section_toast_text);//        alphabetLayout = (LinearLayout) findViewById(R.id.alphabet_layout);////        lv = (ListView) findViewById(R.id.lv_select_contact);//        edittext = (EditText) findViewById(R.id.edittext);//        loadWaterMachinBrand();////    }////    /**//     * 根据填写的关键字在电话簿里寻找相关信息//     *//     * @param name//     * @return//     *///    private void searchItem(String name) {//        int size = mAll.size();//        brandDatas.clear();//        if (PinYinUtil.isEnglish(name)) {//            name=name.toUpperCase();//            for (int i = 0; i < size; i++){//                int index = mAll.get(i).spingying.indexOf(name);//                int aIndex=mAll.get(i).pinyin.indexOf(name);//                if (index!=-1||aIndex!=-1){//                    brandDatas.add(mAll.get(i));//                }//            }//        } else {//            for (int i = 0; i < size; i++) {//                int index = mAll.get(i).name.indexOf(name);//                // 存在匹配的数据//                if (index != -1) {//                    brandDatas.add(mAll.get(i));//                }//            }//        }////    }//////    /**//     * 为联系人ListView设置监听事件，//     * 根据当前的滑动状态来改变分组的显示位置，//     * 从而实现挤压动画的效果。//     * auth:liyachao//     *///    private void setupContactsListView() {////        lv.setAdapter(adapter);//        lv.setOnScrollListener(new AbsListView.OnScrollListener() {//            @Override//            public void onScrollStateChanged(AbsListView view, int scrollState) {//            }////            @Override//            public void onScroll(AbsListView view, int firstVisibleItem,//                                 int visibleItemCount,//                                 int totalItemCount) {//                int section = indexer.getSectionForPosition(firstVisibleItem);//                int nextSecPosition = indexer.getPositionForSection(section + 1);//                setSortAlphabet(section);//////                if (firstVisibleItem != lastFirstVisibleItem) {////                    ViewGroup.MarginLayoutParams params =//                            (ViewGroup.MarginLayoutParams) titleLayout//                                    .getLayoutParams();//                    params.topMargin = 0;//                    titleLayout.setLayoutParams(params);//                    title.setText(String.valueOf(alphabet.charAt(section)));//                }//                if (nextSecPosition == firstVisibleItem + 1) {//                    View childView = view.getChildAt(0);//                    if (childView != null) {//                        int titleHeight = titleLayout.getHeight();//                        int bottom = childView.getBottom();//                        ViewGroup.MarginLayoutParams params =//                                (ViewGroup.MarginLayoutParams) titleLayout//                                        .getLayoutParams();//                        if (bottom < titleHeight) {//                            float pushedDistance = bottom - titleHeight;//                            params.topMargin = (int) pushedDistance;//                            titleLayout.setLayoutParams(params);//                        } else {////                            if (params.topMargin != 0) {//                                params.topMargin = 0;//                                titleLayout.setLayoutParams(params);//                            }//                        }//                    }//                }//                lastFirstVisibleItem = firstVisibleItem;//            }//        });////    }////    /**//     * 设置默认的字幕背景和字体颜色//     *///    private void setSortAlphabet(int section) {//        TextView tv;//        for (int i = 0; i < 27; i++) {//            if (section == i) {//                tv = alphabetList.get(section);//                tv.setTextColor(Color.parseColor("#9dd1fc"));//            } else {//                tv = alphabetList.get(i);//                tv.setTextColor(Color.parseColor("#ffffff"));//            }//            tv.setGravity(Gravity.CENTER);//        }//    }////    /**//     * 设置字母表上的触摸事件，根据当前触摸的位置结合字母表的高度，//     * 计算出当前触摸在哪个字母上。//     * 当手指按在字母表上时，展示弹出式分组。手指离开字母表时，//     * 将弹出式分组隐藏。//     * auth:liyachao//     *///    private void setAlpabetListener() {//        alphabetLayout.setOnTouchListener(new View.OnTouchListener() {//            @Override//            public boolean onTouch(View v, MotionEvent event) {//                float alphabetHeight = alphabetLayout.getHeight();//                float y = event.getY();////                int sectionPosition = (int) ((y / alphabetHeight) / (1f / 27f));//                if (sectionPosition < 0) {//                    sectionPosition = 0;//                } else if (sectionPosition > 26) {//                    sectionPosition = 26;//                }////                String sectionLetter = String.valueOf(alphabet.charAt(sectionPosition));//                int position = indexer.getPositionForSection(sectionPosition);//                switch (event.getAction()) {//                    case MotionEvent.ACTION_DOWN://                        alphabetList.get(sectionPosition)//                                .setTextColor(Color.parseColor("#ffffff"));//                        sectionToastLayout.setVisibility(View.VISIBLE);//                        sectionToastText.setText(sectionLetter);//                        sectionToastText.setTextColor(Color.parseColor("#ffffff"));//                        lv.setSelection(position);//                        break;//                    case MotionEvent.ACTION_MOVE:////                        setSortAlphabet(sectionPosition);//                        sectionToastText.setText(sectionLetter);//                        lv.setSelection(position);//                        break;//                    default://                        setSortAlphabet(sectionPosition);//                        sectionToastLayout.setVisibility(View.GONE);//                }//                return true;//            }//        });//    }////    class MyOnItemClickListener implements OnItemClickListener {////        @Override//        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {//            Intent intent = new Intent();//            intent.putExtra("data", (NewChooserActivity.ResultData) adapter.getItem(position));//            setResult(Activity.RESULT_OK, intent);//            finish();//        }//    }////    class MyTextWatcher implements TextWatcher {////        @Override//        public void beforeTextChanged(CharSequence s, int start, int count, int after) {////        }////        @Override//        public void onTextChanged(CharSequence s, int start, int before, int count) {////        }////        @Override//        public void afterTextChanged(Editable s) {//            String str = s.toString();//            if (str.equals("")) {//                brandDatas.clear();//                brandDatas.addAll(mAll);//                dissmissList(false);//                adapter.dataChanged(brandDatas);//                adapter.setIndexer(indexer);//                titleLayout.setVisibility(View.VISIBLE);//            } else {//                searchItem(str.trim());//                dissmissList(true);//                adapter.dataChanged(brandDatas);//                titleLayout.setVisibility(View.GONE);//            }//            lv.setAdapter(adapter);//        }//    }////    private void dissmissList(boolean dismiss) {//        int size = alphabetList.size();//        for (int i = 0; i < size; i++) {//            if (dismiss) {//                alphabetList.get(i).setVisibility(View.GONE);//            } else {//                alphabetList.get(i).setVisibility(View.VISIBLE);//            }//        }//    }////    ;////    private void setAlphabetData() {//        TextView xx = (TextView) findViewById(R.id.contact_xx);//        alphabetList.add(xx);//        TextView A = (TextView) findViewById(R.id.contact_A);//        alphabetList.add(A);//        TextView B = (TextView) findViewById(R.id.contact_B);//        alphabetList.add(B);//        TextView C = (TextView) findViewById(R.id.contact_C);//        alphabetList.add(C);//        TextView D = (TextView) findViewById(R.id.contact_D);//        alphabetList.add(D);//        TextView E = (TextView) findViewById(R.id.contact_E);//        alphabetList.add(E);//        TextView F = (TextView) findViewById(R.id.contact_F);//        alphabetList.add(F);//        TextView G = (TextView) findViewById(R.id.contact_G);//        alphabetList.add(G);//        TextView H = (TextView) findViewById(R.id.contact_H);//        alphabetList.add(H);//        TextView I = (TextView) findViewById(R.id.contact_I);//        alphabetList.add(I);//        TextView J = (TextView) findViewById(R.id.contact_J);//        alphabetList.add(J);//        TextView K = (TextView) findViewById(R.id.contact_K);//        alphabetList.add(K);//        TextView L = (TextView) findViewById(R.id.contact_L);//        alphabetList.add(L);//        TextView M = (TextView) findViewById(R.id.contact_M);//        alphabetList.add(M);//        TextView N = (TextView) findViewById(R.id.contact_N);//        alphabetList.add(N);//        TextView O = (TextView) findViewById(R.id.contact_O);//        alphabetList.add(O);//        TextView P = (TextView) findViewById(R.id.contact_P);//        alphabetList.add(P);//        TextView Q = (TextView) findViewById(R.id.contact_Q);//        alphabetList.add(Q);//        TextView R1 = (TextView) findViewById(R.id.contact_R);//        alphabetList.add(R1);//        TextView S = (TextView) findViewById(R.id.contact_S);//        alphabetList.add(S);//        TextView T = (TextView) findViewById(R.id.contact_T);//        alphabetList.add(T);//        TextView U = (TextView) findViewById(R.id.contact_U);//        alphabetList.add(U);//        TextView V = (TextView) findViewById(R.id.contact_V);//        alphabetList.add(V);//        TextView W = (TextView) findViewById(R.id.contact_W);//        alphabetList.add(W);//        TextView X = (TextView) findViewById(R.id.contact_X);//        alphabetList.add(X);//        TextView Y = (TextView) findViewById(R.id.contact_Y);//        alphabetList.add(Y);//        TextView Z = (TextView) findViewById(R.id.contact_Z);//        alphabetList.add(Z);////    }////    public static class BrandData extends NewChooserActivity.ResultData implements Serializable {//        public String pinyin;////        public String spingying;//    }//}